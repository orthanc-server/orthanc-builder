name: nightly-osx-branch-builds

# on:
#   schedule:
#     - cron: "0 * * * *"

on:
  push:
    branches: 
      - 'nightly-builds'

jobs:

  get-build-matrix:
    name: get-build-matrix
    runs-on: "ubuntu-latest"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      # Required as the JSON input file needs to be read
      - uses: actions/checkout@v2      
    
      - id: set-matrix
        uses: JoshuaTheMiller/conditional-build-matrix@main        
        with:
          inputFile: 'build-matrix.json'
          filter: 'configs[?runsOnOSX]'

      - name: output
        run: |
          echo ${{steps.set-matrix.outputs.matrix}}

  build-osx-branches:
    name: build-osx-branches
    runs-on: "macos-latest"
    needs: [get-build-matrix]
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.get-build-matrix.outputs.matrix)}}
        # config:
        # - {
        #     name: "Orthanc", 
        #     repo: "https://hg.orthanc-server.com/orthanc/",
        #     branch: "default",
        #     sourcesSubPath: "/OrthancServer",
        #     artifactsOSX: "Orthanc;libModalityWorklists.dylib;libServeFolders.dylib;libConnectivityChecks.dylib",
        #     # artifact2: "libModalityWorklists.dylib",
        #     # artifact3: "libServeFolders.dylib",
        #     # artifact4: "libConnectivityChecks.dylib",
        #     extraCMakeFlags: "",
        #     unitTests: "./UnitTests"
        #   },
        # - {
        #     name: "Orthanc-tcia", 
        #     repo: "https://hg.orthanc-server.com/orthanc-tcia/",
        #     branches: "default;OrthancTcia-1.1",
        #     artifactsOSX: "libOrthancTcia.dylib"
        #   }

    steps:
    - uses: actions/checkout@v2

    - name: Build if required
      id: build
      run: |
        brew install mercurial
        ./build-osx-branch.sh configName="${{matrix.name}}" repo="${{matrix.repo}}" branches="${{matrix.branches}}" workspace="${{github.workspace}}" sourcesSubPath="${{matrix.sourcesSubPath}}" unitTests="${{matrix.unitTests}}" extraCMakeFlags="${{matrix.extraCMakeFlags}}" artifacts="${{matrix.artifactsOSX}}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

