name: nightly-unstable-packages

on:
  schedule:
    - cron: "0 7 * * *"

  pull_request:
    branches: [ master ]

jobs:
  pre-build:
    name: pre-build
    runs-on: "ubuntu-latest"
    outputs:
      current_branch_tag: ${{steps.branch-name.outputs.current_branch}}
      is_tag: ${{steps.branch-name.outputs.is_tag}}
      ref_branch: ${{steps.branch-name.outputs.ref_branch}}
      default_branch: ${{steps.branch-name.outputs.default_branch}}
      is_default: ${{steps.branch-name.outputs.is_default}}
    steps:
      - name: Get branch/tag name
        id: branch-name
        uses: tj-actions/branch-names@v5.1
        # output: steps.branch-name.outputs.current_branch contains the branch or the tag



  build-osx-package:
    name: build-osx-package
    runs-on: "ubuntu-latest"
    needs: [pre-build]

    steps:
    
    - uses: actions/checkout@v2

    - name: Build osx unstable package
      run: ./build-osx-package.sh is_tag=${{ needs.pre-build.outputs.is_tag }} version=unstable branchTagName=${{ needs.pre-build.outputs.current_branch_tag }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


  # TODO: there's currently no difference between stable/unstable windows installer
  # build-windows-installer:
  #   name: build-windows-installer
  #   runs-on: "ubuntu-latest"
  #   needs: [pre-build]

  #   steps:
    
  #   - uses: actions/checkout@v2

  #   - name: Echo var
  #     run: |
  #       echo ${{ needs.pre-build.outputs.is_tag }} ${{ needs.pre-build.outputs.current_branch_tag }} ${{ needs.pre-build.outputs.ref_branch }} ${{ needs.pre-build.outputs.default_branch }} ${{ needs.pre-build.outputs.is_default }}
  #       echo ${{ github.ref}}

  #   - name: Build installer
  #     run: ./ciBuildWindowsInstaller.sh ${{ needs.pre-build.outputs.is_tag }} ${{ needs.pre-build.outputs.current_branch_tag }}
  #     working-directory: ./WindowsInstaller
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      

  build-docker:
    name: build-docker
    runs-on: "ubuntu-latest"
    needs: [pre-build]
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "linux/amd64",
            platform: "linux/amd64",
            cache: "cache-amd64-unstable",
            stableUnstable: "unstable"
          }
        
    steps:
    
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        config: .github/buildkitd.toml

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # following lines are copied as is from all-builds.yml
    - name: Build with local-build.sh
      run: ./local-build.sh version=${{ matrix.config.stableUnstable }} platform=${{ matrix.config.platform }} type=ci step=build currentTag=${{ needs.pre-build.outputs.current_branch_tag }}-${{ matrix.config.stableUnstable }}

    - name: Run integration tests
      run: ./run-integration-tests.sh version=${{ matrix.config.stableUnstable }} tagToTest=${{ needs.pre-build.outputs.current_branch_tag }}-${{ matrix.config.stableUnstable }}
      working-directory: ${{github.workspace}}/docker/integration-tests

    - name: Push with branch/tag
      run: ./local-build.sh version=${{ matrix.config.stableUnstable }} platform=${{ matrix.config.platform }} type=ci step=push currentTag=${{ needs.pre-build.outputs.current_branch_tag }}-${{ matrix.config.stableUnstable }} pushTag=${{ needs.pre-build.outputs.current_branch_tag }}-${{ matrix.config.stableUnstable }}
