name: all-builds

on:
  push:
    branches: 
      - '*'
    tags:
      - '*'

  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.) (for OSX only !)
  BUILD_TYPE: Release

jobs:
  pre-build:
    name: pre-build
    runs-on: "ubuntu-latest"
    outputs:
      current_branch_tag: ${{steps.branch-name.outputs.current_branch}}
      is_tag: ${{steps.branch-name.outputs.is_tag}}
      ref_branch: ${{steps.branch-name.outputs.ref_branch}}
      default_branch: ${{steps.branch-name.outputs.default_branch}}
      is_default: ${{steps.branch-name.outputs.is_default}}
    steps:
      - name: Get branch/tag name
        id: branch-name
        uses: tj-actions/branch-names@v5.1
        # output: steps.branch-name.outputs.current_branch contains the branch or the tag

  build-osx-package:
    name: build-osx-package
    runs-on: "macos-latest"
    needs: [pre-build]

    steps:
    
    - uses: actions/checkout@v2

    - name: Echo var
      run: |
        echo ${{ needs.pre-build.outputs.is_tag }} ${{ needs.pre-build.outputs.current_branch_tag }} ${{ needs.pre-build.outputs.ref_branch }} ${{ needs.pre-build.outputs.default_branch }} ${{ needs.pre-build.outputs.is_default }}
        echo ${{ github.ref}}
        pwd

    - name: Clone mercurial repo
      run: |
        brew install mercurial
        hg clone https://hg.orthanc-server.com/orthanc-transfers/ -r "49e9245b4005" ${{github.workspace}}/sources

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DALLOW_DOWNLOADS=ON -DCMAKE_BUILD_TYPE:STRING=Release -DUSE_SYSTEM_GOOGLE_TEST=OFF -DUSE_SYSTEM_ORTHANC_SDK=OFF ${{github.workspace}}/sources
      env: 
        MAKEFLAG: -j4

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      env: 
        MAKEFLAG: -j4


  # build-windows-installer:
  #   name: build-windows-installer
  #   runs-on: "ubuntu-latest"
  #   needs: [pre-build]

  #   steps:
    
  #   - uses: actions/checkout@v2

  #   - name: Echo var
  #     run: |
  #       echo ${{ needs.pre-build.outputs.is_tag }} ${{ needs.pre-build.outputs.current_branch_tag }} ${{ needs.pre-build.outputs.ref_branch }} ${{ needs.pre-build.outputs.default_branch }} ${{ needs.pre-build.outputs.is_default }}
  #       echo ${{ github.ref}}

  #   - name: Build installer
  #     run: ./ciBuildWindowsInstaller.sh ${{ needs.pre-build.outputs.is_tag }} ${{ needs.pre-build.outputs.current_branch_tag }}
  #     working-directory: ./WindowsInstaller
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      

  # build-docker:
  #   name: build-docker
  #   runs-on: "ubuntu-latest"
  #   needs: [pre-build]

  #   steps:
    
  #   - uses: actions/checkout@v2

  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v1

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v1
  #     with:
  #       config: .github/buildkitd.toml

  #   - name: Build the osimis/orthanc Docker image (no push)
  #     uses: docker/build-push-action@v2
  #     with:
  #       context: docker/orthanc/
  #       # platforms: linux/amd64,linux/arm64
  #       push: false
  #       tags: osimis/orthanc:current
  #       cache-from: type=gha,scope=osimis-orthanc
  #       cache-to: type=gha,scope=osimis-orthanc

  #   - name: Login to DockerHub
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}

  #   - name: Push with branch/tag
  #     uses: docker/build-push-action@v2
  #     with:
  #       context: docker/orthanc/
  #       # platforms: linux/amd64,linux/arm64
  #       push: true
  #       tags: osimis/orthanc:${{ needs.pre-build.outputs.current_branch_tag }}  # push with branch name or tag
  #       cache-from: type=gha,scope=osimis-orthanc
  #       cache-to: type=gha,scope=osimis-orthanc

  #   - name: Push with latest tag
  #     uses: docker/build-push-action@v2
  #     if: needs.pre-build.outputs.is_tag == 'true'
  #     with:
  #       context: docker/orthanc/
  #       push: true
  #       tags: osimis/orthanc:latest
  #       cache-from: type=gha,scope=osimis-orthanc
  #       cache-to: type=gha,scope=osimis-orthanc

  #   - name: Update DockerHub repo description
  #     uses: peter-evans/dockerhub-description@v2
  #     if: needs.pre-build.outputs.is_tag == 'true'
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_PASSWORD }}
  #       repository: osimis/orthanc

