
Setup
=====

General architecture
--------------------

- The Windows installer is entirely built under Linux.

- The installer is generated by InnoSetup
  (http://www.jrsoftware.org/isinfo.php) under Linux thanks to Wine.

- The content of the installer is populated by a Python script, which
  downloads files from the Orthanc CIS (BuildBot - for core and
  official plugins), and from the Osimis CIS (Jenkins - for the Osimis
  Web viewer).

- The Windows service is compiled with MinGW-W64 as a Windows 32 bit
  binary (including for Windows 64).

- An additional tool called "PatchDefaultConfiguration" patches the
  default configuration file of Orthanc, in order to replace the
  "IndexDirectory" and "StorageDirectory" options by the choice of the
  user (this choice is stored as a Windows registry key).



Configuration
-------------

Install an Ubuntu 16.04 box (or anything similar)

# sudo apt-get install build-essential g++-mingw-w64 wine cmake
# wget http://www.jrsoftware.org/download.php/is.exe
# wine ./is.exe

NB: The error messages that might appear while invoking InnoSetup
are Wine-related and can be safely ignored.


Build
-----

Windows 32 package:

# rm -rf /tmp/OsimisInstaller
# ./CreateInstaller.py --config Orthanc-1.2.0-32.json

Windows 64 package:

# rm -rf /tmp/OsimisInstaller
# ./CreateInstaller.py --config Orthanc-1.2.0-32.json

The resulting installers are located in "/tmp/OsimisInstaller/"



Configuration files
===================

The default configuration files are retrieved from the official Debian
packages:

# wget 'https://anonscm.debian.org/viewvc/debian-med/trunk/packages/orthanc-webviewer/trunk/debian/configuration/webviewer.json?view=co' -O Resources/webviewer.json
# unix2dos Resources/webviewer.json

# wget https://anonscm.debian.org/cgit/debian-med/orthanc-dicomweb.git/plain/debian/configuration/dicomweb.json -O Resources/dicomweb.json
# unix2dos Resources/dicomweb.json

# wget 'https://anonscm.debian.org/viewvc/debian-med/trunk/packages/orthanc-postgresql/trunk/debian/configuration/postgresql.json?view=co' -O Resources/postgresql.json
# unix2dos Resources/postgresql.json

# wget https://anonscm.debian.org/cgit/debian-med/orthanc.git/plain/debian/configuration/serve-folders.json -O Resources/serve-folders.json
# unix2dos Resources/serve-folders.json

# wget https://anonscm.debian.org/cgit/debian-med/orthanc.git/plain/debian/configuration/worklists.json -O Resources/worklists.json
# unix2dos Resources/worklists.json

# wget https://hg.orthanc-server.com/orthanc-stone/raw-file/StoneWebViewer-2.3/Applications/StoneWebViewer/WebApplication/configuration.json -O Resources/stone-webviewer.json
# unix2dos Resources/stone-webviewer.json


InnoSetup Bitmaps
=================

Gimp
----

If you are making a BMP from within GIMP and are exporting to a BMP,
use the following options:

- Compatibility Options -> Do not write color space information
- Advanced Options -> 24 bits (R8 G8 B8)

Otherwise, InnoSetup will tag the BMP as unsupported...


ImageMagick
-----------

http://www.imagemagick.org/Usage/formats/#bmp

# convert -resize 55x58 ./Resources/OsimisLogo.png -background white -alpha remove -flatten -alpha off BMP3:./Resources/OsimisWizardLogo.bmp
# convert -resize 164x314 ./Resources/OsimisWizard.png -background white -alpha remove -flatten -alpha off BMP3:./Resources/OsimisWizard.bmp


Icons
-----

http://www.imagemagick.org/Usage/thumbnails/#favicon

# convert ./Resources/OsimisLogo.png -background white -alpha remove -flatten -alpha off -resize 256x256 \
          -define icon:auto-resize="256,128,96,64,48,32,16" \
          ./Resources/Osimis.ico

=> Bad smoothing, unfortunately... so:

# convert ./Resources/OsimisLogoShadow.png -resize 256x256 /tmp/icon-256.png &&
  convert /tmp/icon-256.png -filter Gaussian -define filter:sigma=.5 -resize 128x128 /tmp/icon-128.png &&
  convert /tmp/icon-128.png -filter Gaussian -define filter:sigma=.5 -resize 64x64 /tmp/icon-64.png && 
  convert /tmp/icon-64.png -filter Gaussian -define filter:sigma=.5 -resize 32x32 /tmp/icon-32.png &&
  convert /tmp/icon-32.png -filter Gaussian -define filter:sigma=.5 -resize 16x16 /tmp/icon-16.png &&
  convert /tmp/icon-16.png /tmp/icon-32.png /tmp/icon-64.png /tmp/icon-128.png /tmp/icon-256.png ./Resources/Osimis.ico
